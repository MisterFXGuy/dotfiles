
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.

" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'L9'

" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'

" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" Avoid a name conflict with L9
" Plugin 'user/L9', {'name': 'newL9'}
Plugin 'bling/vim-airline'
Plugin 'fatih/vim-go'
Plugin 'tpope/vim-surround'
Plugin 'AutoClose'
"Plugin 'chriskempson/base16-vim'
Plugin 'vim-scripts/cream-showinvisibles'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'airblade/vim-gitgutter'
Plugin 'moll/vim-bbye'
Plugin 'Valloric/YouCompleteMe'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'terryma/vim-smooth-scroll'
Plugin 'ctrlpvim/ctrlp.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
"filetype plugin on

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

set laststatus=2
let g:airline_powerline_fonts = 1

let mapleader="\<Space>"
set encoding=utf-8

syntax enable
set background=dark
set tabstop=2
set shiftwidth=2
set expandtab
set number
set showcmd
set showmode
set hidden
set ignorecase
set smartcase
set incsearch
set hlsearch
set nowrap
set cursorline          " highlight current line"
" set showmatch           " highlight matching [{()}]"
let NERDTreeIgnore = ['.pyc$']
set noswapfile

" golang
let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 1
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

colorscheme base16-harmonic16

" code folding
"set foldenable
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set foldlevel=0
set nofoldenable

" custom mappings
inoremap jj <ESC>
inoremap <C-a> <Esc>I
inoremap <C-e> <Esc>A
inoremap <C-f> <right>
inoremap <C-d> <left>
inoremap <C-n> <down>
inoremap <C-b> <up>
nnoremap <Leader>q :Bdelete<CR>
nnoremap <Leader>d :NERDTreeToggle<CR>
inoremap <C-j> <BS>
inoremap <C-k> <right><BS>

" tabs
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#show_tabs = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
let g:airline_theme='powerlineish'

" disable scratch window
set completeopt-=preview

let g:gitgutter_max_signs = 1000000

noremap <silent> <c-u> :call smooth_scroll#up(&scroll, 0, 1)<CR>
noremap <silent> <c-d> :call smooth_scroll#down(&scroll, 0, 1)<CR>
noremap <silent> <c-b> :call smooth_scroll#up(&scroll, 0, 2)<CR>
noremap <silent> <c-f> :call smooth_scroll#down(&scroll, 0, 2)<CR>

